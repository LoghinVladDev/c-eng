@startuml

!includesub ../../../../../../../../doc/dependencies/primitive/object.puml!OBJECT
!includesub ../../../vulkan.puml!VULKAN

!startsub QUEUE

namespace engine {

    namespace vulkan {

        class QueueFamily

        VulkanRenderObject <|-- QueueFamily

        class QueueFamily {
            - _details : QueueFamilyDetails
            - _performanceCounterProperties : Array < PerformanceCounterProperties >
            - _familyIndex : uint32
            - _physicalDevice : PhysicalDevice
            .. getters ..
            + QueueFamilyDetails details () const
            + Array < PerformanceCounterProperties > performanceCounterProperties () const
            + uint32 familyIndex () const
            + PhysicalDevice physicalDevice () const
            .. functions ..
            + QueueFamily init ( PhysicalDevice, QueueFamilyDetails )
            + Query < Undefined > query () const
        }

        class "QueueFamily::Query" < QueryResult > {
            - _surface : SurfaceHandle
            - _pQueueFamily : QueueFamily
            - Query ( QueueFamily )
            + Query ( Query )
            + Query < R > select ()
            + QueryResult execute ()
            + Query < R > withSurface ( SurfaceHandle )
        }

        cds.Object <|-- "QueueFamily::Query"
        "QueueFamily::Query" "query object for" -- QueueFamily

        class Queue {
            - _handle : QueueHandle
            - _queueFamily : QueueFamily
            - _index : uint32
            - _type : QueueFlag
            + Queue init ( Device, QueueFamily, uint32, QueueFlag )
        }

        VulkanRenderObject <|-- Queue

        Queue "many" o-- "1" QueueFamily

    }

}

!endsub

@enduml